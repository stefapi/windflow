# ============================================================================
# WINDFLOW PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================================================
#
# Copiez ce fichier vers .env.prod et configurez les valeurs appropriées
# pour votre environnement de production.
#
# IMPORTANT: Ne jamais commiter le fichier .env.prod dans le repository !
#

# ============================================================================
# DOMAIN & SSL CONFIGURATION
# ============================================================================

# Domaine principal de l'application
DOMAIN=windflow.example.com

# Email pour les certificats Let's Encrypt
ACME_EMAIL=admin@example.com

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Configuration
POSTGRES_DB=windflow_prod
POSTGRES_USER=windflow_prod
# Générer avec: openssl rand -base64 32
POSTGRES_PASSWORD=your_super_secure_postgres_password_here

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis Password
# Générer avec: openssl rand -base64 32
REDIS_PASSWORD=your_super_secure_redis_password_here

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Secret key pour JWT et chiffrement
# Générer avec: openssl rand -hex 32
SECRET_KEY=your_super_secure_secret_key_here

# HashiCorp Vault Token
# À obtenir après initialisation de Vault
VAULT_TOKEN=your_vault_root_token_here

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

# Grafana Admin Credentials
GRAFANA_ADMIN_USER=admin
# Générer avec: openssl rand -base64 32
GRAFANA_ADMIN_PASSWORD=your_grafana_admin_password_here
# Générer avec: openssl rand -hex 32
GRAFANA_SECRET_KEY=your_grafana_secret_key_here

# Prometheus Basic Auth (format user:password en base64)
# Générer avec: echo -n "admin:password" | htpasswd -niB admin
PROMETHEUS_BASIC_AUTH=admin:$2y$10$your_bcrypt_hash_here

# ============================================================================
# EMAIL CONFIGURATION (pour Grafana)
# ============================================================================

# SMTP Configuration pour les alertes
SMTP_HOST=smtp.example.com:587
SMTP_USER=noreply@example.com
SMTP_PASSWORD=your_smtp_password_here

# ============================================================================
# LLM CONFIGURATION
# ============================================================================

# Configuration LLM (Ollama/OpenAI/etc.)
LLM_PROVIDER=ollama
LLM_MODEL=codellama:13b
LLM_BASE_URL=http://ollama:11434

# Configuration OpenAI (si utilisé)
# OPENAI_API_KEY=your_openai_api_key_here

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================

# Configuration AWS S3 pour les backups
BACKUP_S3_BUCKET=windflow-backups-prod
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_DEFAULT_REGION=eu-west-1

# ============================================================================
# STORAGE PATHS
# ============================================================================

# Chemin de base pour les données persistantes
DATA_PATH=/opt/windflow/data

# Chemin pour les backups locaux
BACKUP_PATH=/opt/windflow/backups

# Chemin pour les logs
LOG_PATH=/opt/windflow/logs

# ============================================================================
# RESOURCE LIMITS (optionnel - override les valeurs par défaut)
# ============================================================================

# Postgres Resources
# POSTGRES_MEMORY_LIMIT=2g
# POSTGRES_CPU_LIMIT=1.0

# Redis Resources
# REDIS_MEMORY_LIMIT=512m
# REDIS_CPU_LIMIT=0.5

# API Resources
# API_MEMORY_LIMIT=2g
# API_CPU_LIMIT=1.5
# API_REPLICAS=2

# Worker Resources
# WORKER_MEMORY_LIMIT=2g
# WORKER_CPU_LIMIT=2.0
# WORKER_REPLICAS=2

# ============================================================================
# ADVANCED CONFIGURATION
# ============================================================================

# Network Configuration
# BACKEND_SUBNET=172.20.0.0/16
# FRONTEND_SUBNET=172.21.0.0/16

# SSL Configuration
# SSL_PROTOCOLS=TLSv1.2 TLSv1.3
# SSL_CIPHERS=ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256

# Monitoring retention
# PROMETHEUS_RETENTION_TIME=30d
# PROMETHEUS_RETENTION_SIZE=10GB
# LOKI_RETENTION_PERIOD=168h

# Backup retention
# BACKUP_RETENTION_DAYS=30
# LOCAL_BACKUP_RETENTION_DAYS=7

# ============================================================================
# DEVELOPMENT OVERRIDES (ne pas utiliser en production)
# ============================================================================

# Ces variables ne doivent PAS être définies en production
# DEBUG=false
# LOG_LEVEL=INFO
# TRAEFIK_API_DASHBOARD=false
# VAULT_DEV_MODE=false

# ============================================================================
# EXAMPLES DE GENERATION DE MOTS DE PASSE
# ============================================================================

# Générer des mots de passe sécurisés :
# openssl rand -base64 32                    # Mots de passe génériques
# openssl rand -hex 32                       # Clés hexadécimales
# htpasswd -nbB admin password               # Basic auth pour Prometheus
# python -c "import secrets; print(secrets.token_urlsafe(32))"  # Token URL-safe

# ============================================================================
# VERIFICATION CHECKLIST
# ============================================================================

# Avant le déploiement, vérifiez que :
# [ ] Tous les mots de passe sont uniques et sécurisés (minimum 32 caractères)
# [ ] Le domaine DOMAIN pointe vers votre serveur
# [ ] L'email ACME_EMAIL est valide pour Let's Encrypt
# [ ] Les chemins DATA_PATH, BACKUP_PATH et LOG_PATH existent et sont accessibles
# [ ] La configuration SMTP est correcte pour les alertes
# [ ] Les credentials AWS S3 sont valides pour les backups
# [ ] Le réseau externe 'traefik-public' est créé : docker network create traefik-public
# [ ] Les répertoires de données ont les bonnes permissions : chown -R 1000:1000 /opt/windflow
